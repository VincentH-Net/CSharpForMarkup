<!-- For CSharpMarkup projects-->
<Project>
	<PropertyGroup>
		<CSharpMarkupVersion>2.3.64</CSharpMarkupVersion>
		<CSharpMarkupReleaseTag>csharpmarkup2-winui-2-3-64</CSharpMarkupReleaseTag>
		<ManagePackageVersionsCentrally>true</ManagePackageVersionsCentrally>

		<IsUno>true</IsUno>

		<IsAndroid>false</IsAndroid>
		<IsIOS>false</IsIOS>
		<IsMac>false</IsMac>
		<IsMacCatalyst>false</IsMacCatalyst>
		<IsWinAppSdk>false</IsWinAppSdk>
		<IsWasm>false</IsWasm>

		<CSharpMarkupWinUINet7TargetFrameworks>net7.0-windows10.0.19041;net7.0;net7.0-android;net7.0-ios;net7.0-maccatalyst;net7.0-macos</CSharpMarkupWinUINet7TargetFrameworks>
		<CSharpMarkupWinUINet8TargetFrameworks>net8.0-windows10.0.19041;net8.0;net8.0-android;net8.0-ios;net8.0-maccatalyst;net8.0-macos</CSharpMarkupWinUINet8TargetFrameworks>
	</PropertyGroup>

	<Choose>
		<When Condition=" '$(Configuration)' == 'Generate' And '$(DotNetPreviousMajor)' == 'true' ">
			<PropertyGroup>
				<CSharpMarkupWinUITargetFrameworks>$(CSharpMarkupWinUINet7TargetFrameworks)</CSharpMarkupWinUITargetFrameworks>
			</PropertyGroup>
		</When>
		<When Condition=" '$(Configuration)' == 'Generate' And '$(DotNetPreviousMajor)' != 'true' ">
			<PropertyGroup>
				<CSharpMarkupWinUITargetFrameworks>$(CSharpMarkupWinUINet8TargetFrameworks)</CSharpMarkupWinUITargetFrameworks>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<CSharpMarkupWinUITargetFrameworks>$(CSharpMarkupWinUINet7TargetFrameworks);$(CSharpMarkupWinUINet8TargetFrameworks)</CSharpMarkupWinUITargetFrameworks>
			</PropertyGroup>
		</Otherwise>
	</Choose>
	
	<Choose>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">
			<PropertyGroup>
				<IsAndroid>true</IsAndroid>
			</PropertyGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">
			<PropertyGroup>
				<IsIOS>true</IsIOS>
			</PropertyGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'macos'">
			<PropertyGroup>
				<IsMac>true</IsMac>
			</PropertyGroup>
		</When>
		<When Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">
			<PropertyGroup>
				<IsMacCatalyst>true</IsMacCatalyst>
			</PropertyGroup>
		</When>
		<When Condition="$(TargetFramework.Contains('windows10'))">
			<PropertyGroup>
				<IsWinAppSdk>true</IsWinAppSdk>
				<IsUno>false</IsUno>

				<DefineConstants>$(DefineConstants);WINUI</DefineConstants>
				<TargetPlatformMinVersion>10.0.17763.0</TargetPlatformMinVersion>
				<WindowsAppSDKWinUI>true</WindowsAppSDKWinUI> <!-- Workaround for https://github.com/unoplatform/uno/discussions/13569 -->
			</PropertyGroup>
			<Choose>
				<When Condition="$([MSBuild]::GetTargetFrameworkVersion('$(TargetFramework)', 1)) &lt; 8">
					<PropertyGroup>
						<!-- Pre .NET 8 Windows runtime identifiers -->
						<RuntimeIdentifiers>win10-x86;win10-x64;win10-arm64</RuntimeIdentifiers>
					</PropertyGroup>
				</When>
				<Otherwise>
					<PropertyGroup>
						<!-- .NET 8+ Windows runtime identifiers -->
						<RuntimeIdentifiers>win-x86;win-x64;win-arm64</RuntimeIdentifiers>
					</PropertyGroup>
				</Otherwise>
			</Choose>
		</When>
		<Otherwise>
			<PropertyGroup>
				<IsWasm>true</IsWasm>
				<DefineConstants>$(DefineConstants);__WASM_OR_SKIA__</DefineConstants>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<PropertyGroup Condition="$(IsUno)">
		<DefineConstants>$(DefineConstants);HAS_UNO</DefineConstants>
	</PropertyGroup>

	<PropertyGroup Condition=" '$(Configuration)' == 'Generate' ">
		<EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
		<CompilerGeneratedFilesOutputPath>Generated</CompilerGeneratedFilesOutputPath>
	</PropertyGroup>
</Project>
